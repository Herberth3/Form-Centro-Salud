/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.form;

import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.parser.PdfTextExtractor;
import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author gerso
 */
public class Form extends javax.swing.JFrame {

    private String currentPdfPath; // Variable para almacenar la ruta del PDF abierto

    /**
     * Creates new form Form
     */
    public Form() {
        initComponents();
        this.currentPdfPath = null;
        setIconImage(new ImageIcon(getClass().getResource("/com/images/logo_cruz.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        saludbg = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        tittle = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        userTxt = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        pdfBtn = new javax.swing.JPanel();
        pdfBtnTxt = new javax.swing.JLabel();
        apellidoLabel = new javax.swing.JLabel();
        apellidoTxt = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        fnacimientoLabel = new javax.swing.JLabel();
        fnacimientoTxt = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        edadLabel = new javax.swing.JLabel();
        edadTxt = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        cuiLabel = new javax.swing.JLabel();
        cuiTxt = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        residenciaLabel = new javax.swing.JLabel();
        residenciaTxt = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        presionLabel = new javax.swing.JLabel();
        presionTxt = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        pulsoLabel = new javax.swing.JLabel();
        pulsoTxt = new javax.swing.JTextField();
        jSeparator9 = new javax.swing.JSeparator();
        temperaturaLabel = new javax.swing.JLabel();
        temperaturaTxt = new javax.swing.JTextField();
        jSeparator10 = new javax.swing.JSeparator();
        pesoLabel = new javax.swing.JLabel();
        pesoTxt = new javax.swing.JTextField();
        jSeparator11 = new javax.swing.JSeparator();
        tallaLabel = new javax.swing.JLabel();
        tallaTxt = new javax.swing.JTextField();
        jSeparator12 = new javax.swing.JSeparator();
        sfLabel = new javax.swing.JLabel();
        sfTxt = new javax.swing.JTextField();
        jSeparator13 = new javax.swing.JSeparator();
        preconsulta = new javax.swing.JLabel();
        diagnosticoLabel = new javax.swing.JLabel();
        consultaLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        diagnosticoTxt = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        consultadoctoraTxt = new javax.swing.JTextArea();
        openPdfBtn = new javax.swing.JPanel();
        openPdfBtnTxt = new javax.swing.JLabel();
        clearBtn = new javax.swing.JPanel();
        clearBtnTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        panelPrincipal.setBackground(new java.awt.Color(246, 246, 246));
        panelPrincipal.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        saludbg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/portada_ministerio1.jpg"))); // NOI18N
        panelPrincipal.add(saludbg, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 380, 460));

        logo.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/ministerio_logo.jpg"))); // NOI18N
        panelPrincipal.add(logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 60));

        tittle.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        tittle.setText("FORMULARIO CENTRO SALUD");
        panelPrincipal.add(tittle, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        userLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        userLabel.setText("NOMBRES");
        panelPrincipal.add(userLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        userTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        userTxt.setForeground(new java.awt.Color(204, 204, 204));
        userTxt.setText("Ingrese nombre paciente");
        userTxt.setBorder(null);
        userTxt.setName(""); // NOI18N
        userTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                userTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(userTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 490, 20));

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 490, 10));

        pdfBtn.setBackground(new java.awt.Color(0, 134, 190));

        pdfBtnTxt.setBackground(new java.awt.Color(255, 255, 255));
        pdfBtnTxt.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        pdfBtnTxt.setForeground(new java.awt.Color(255, 255, 255));
        pdfBtnTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pdfBtnTxt.setText("GUARDAR PDF");
        pdfBtnTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pdfBtnTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pdfBtnTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pdfBtnTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                pdfBtnTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pdfBtnLayout = new javax.swing.GroupLayout(pdfBtn);
        pdfBtn.setLayout(pdfBtnLayout);
        pdfBtnLayout.setHorizontalGroup(
            pdfBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pdfBtnTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        pdfBtnLayout.setVerticalGroup(
            pdfBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pdfBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pdfBtnTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelPrincipal.add(pdfBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 690, 110, 40));

        apellidoLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        apellidoLabel.setText("APELLIDOS");
        panelPrincipal.add(apellidoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        apellidoTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        apellidoTxt.setForeground(new java.awt.Color(204, 204, 204));
        apellidoTxt.setText("Ingrese apellido paciente");
        apellidoTxt.setBorder(null);
        apellidoTxt.setName(""); // NOI18N
        apellidoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                apellidoTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(apellidoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 490, 20));

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 490, 10));

        fnacimientoLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        fnacimientoLabel.setText("FECHA NACIMIENTO");
        panelPrincipal.add(fnacimientoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        fnacimientoTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fnacimientoTxt.setForeground(new java.awt.Color(204, 204, 204));
        fnacimientoTxt.setText("Ingrese nacimiento paciente");
        fnacimientoTxt.setBorder(null);
        fnacimientoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fnacimientoTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(fnacimientoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 260, 20));

        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 260, 10));

        edadLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        edadLabel.setText("EDAD");
        panelPrincipal.add(edadLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, 80, -1));

        edadTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        edadTxt.setForeground(new java.awt.Color(204, 204, 204));
        edadTxt.setText("Ingrese edad paciente");
        edadTxt.setBorder(null);
        edadTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                edadTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(edadTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 240, 140, 20));

        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 260, 140, 10));

        cuiLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        cuiLabel.setText("CUI: ");
        panelPrincipal.add(cuiLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        cuiTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cuiTxt.setForeground(new java.awt.Color(204, 204, 204));
        cuiTxt.setText("Ingrese cui paciente");
        cuiTxt.setBorder(null);
        cuiTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cuiTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(cuiTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 460, 20));

        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 490, 10));

        residenciaLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        residenciaLabel.setText("RESIDENCIA: ");
        panelPrincipal.add(residenciaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, -1, -1));

        residenciaTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        residenciaTxt.setForeground(new java.awt.Color(204, 204, 204));
        residenciaTxt.setText("Ingrese residencia paciente");
        residenciaTxt.setBorder(null);
        residenciaTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                residenciaTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(residenciaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 400, 20));

        jSeparator7.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 490, 10));

        presionLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        presionLabel.setText("PRESIÓN/ARTERIAL");
        panelPrincipal.add(presionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 140, -1));

        presionTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        presionTxt.setForeground(new java.awt.Color(204, 204, 204));
        presionTxt.setText("Ingrese p/a");
        presionTxt.setBorder(null);
        presionTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                presionTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(presionTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, 140, 20));

        jSeparator8.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 140, 10));

        pulsoLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        pulsoLabel.setText("PULSO");
        panelPrincipal.add(pulsoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 370, 80, -1));

        pulsoTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        pulsoTxt.setForeground(new java.awt.Color(204, 204, 204));
        pulsoTxt.setText("Ingrese pulso paciente");
        pulsoTxt.setBorder(null);
        pulsoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pulsoTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(pulsoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 390, 140, 20));

        jSeparator9.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, 140, 10));

        temperaturaLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        temperaturaLabel.setText("TEMPERATURA");
        panelPrincipal.add(temperaturaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 370, 120, -1));

        temperaturaTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        temperaturaTxt.setForeground(new java.awt.Color(204, 204, 204));
        temperaturaTxt.setText("Ingrese temperatura paciente");
        temperaturaTxt.setBorder(null);
        temperaturaTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                temperaturaTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(temperaturaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 390, 180, 20));

        jSeparator10.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 180, 10));

        pesoLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        pesoLabel.setText("PESO");
        panelPrincipal.add(pesoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 80, -1));

        pesoTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        pesoTxt.setForeground(new java.awt.Color(204, 204, 204));
        pesoTxt.setText("Ingrese peso paciente");
        pesoTxt.setBorder(null);
        pesoTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pesoTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(pesoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 140, 20));

        jSeparator11.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 140, 10));

        tallaLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        tallaLabel.setText("TALLA");
        panelPrincipal.add(tallaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 420, 80, -1));

        tallaTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tallaTxt.setForeground(new java.awt.Color(204, 204, 204));
        tallaTxt.setText("Ingrese talla paciente");
        tallaTxt.setBorder(null);
        tallaTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tallaTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(tallaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 140, 20));

        jSeparator12.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 140, 10));

        sfLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        sfLabel.setText("SF");
        panelPrincipal.add(sfLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 60, 80, -1));

        sfTxt.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        sfTxt.setForeground(new java.awt.Color(204, 204, 204));
        sfTxt.setText("Ingrese SF");
        sfTxt.setBorder(null);
        sfTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sfTxtMousePressed(evt);
            }
        });
        panelPrincipal.add(sfTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 140, 20));

        jSeparator13.setForeground(new java.awt.Color(0, 0, 0));
        panelPrincipal.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 140, 10));

        preconsulta.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        preconsulta.setText("PRE-CONSULTA");
        panelPrincipal.add(preconsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, -1, -1));

        diagnosticoLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        diagnosticoLabel.setText("DX (Diagnóstico) - Anotaciones");
        panelPrincipal.add(diagnosticoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 210, -1));

        consultaLabel.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        consultaLabel.setText("CONSULTA DOCTORA - Anotaciones");
        panelPrincipal.add(consultaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, 250, -1));

        diagnosticoTxt.setColumns(20);
        diagnosticoTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        diagnosticoTxt.setRows(5);
        jScrollPane1.setViewportView(diagnosticoTxt);

        panelPrincipal.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 390, 170));

        consultadoctoraTxt.setColumns(20);
        consultadoctoraTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        consultadoctoraTxt.setRows(5);
        jScrollPane2.setViewportView(consultadoctoraTxt);

        panelPrincipal.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 500, 430, 170));

        openPdfBtn.setBackground(new java.awt.Color(0, 134, 190));

        openPdfBtnTxt.setBackground(new java.awt.Color(255, 255, 255));
        openPdfBtnTxt.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        openPdfBtnTxt.setForeground(new java.awt.Color(255, 255, 255));
        openPdfBtnTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        openPdfBtnTxt.setText("ABRIR PDF");
        openPdfBtnTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        openPdfBtnTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                openPdfBtnTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                openPdfBtnTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                openPdfBtnTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout openPdfBtnLayout = new javax.swing.GroupLayout(openPdfBtn);
        openPdfBtn.setLayout(openPdfBtnLayout);
        openPdfBtnLayout.setHorizontalGroup(
            openPdfBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(openPdfBtnTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        openPdfBtnLayout.setVerticalGroup(
            openPdfBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(openPdfBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openPdfBtnTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelPrincipal.add(openPdfBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 690, 110, 40));

        clearBtn.setBackground(new java.awt.Color(153, 153, 0));

        clearBtnTxt.setBackground(new java.awt.Color(255, 255, 255));
        clearBtnTxt.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        clearBtnTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clearBtnTxt.setText("LIMPIAR CAMPOS");
        clearBtnTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearBtnTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearBtnTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearBtnTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearBtnTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout clearBtnLayout = new javax.swing.GroupLayout(clearBtn);
        clearBtn.setLayout(clearBtnLayout);
        clearBtnLayout.setHorizontalGroup(
            clearBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clearBtnTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        clearBtnLayout.setVerticalGroup(
            clearBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clearBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clearBtnTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelPrincipal.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 690, 120, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPlaceholder(JTextField textField, String placeholder) {

        textField.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (textField.getText().equals(placeholder)) {
                    textField.setText("");
                    textField.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (textField.getText().isEmpty()) {
                    textField.setText(placeholder);
                    textField.setForeground(new Color(204, 204, 204));
                }
            }
        });
    }

    private String validarNombre(String nombre) {
        if (nombre.trim().isEmpty() || nombre.equals("Ingrese nombre paciente")) {
            return "El campo NOMBRE está vacío.";
        } else if (!nombre.matches("[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s]+")) {
            return "El campo NOMBRE no tiene el formato correcto.";
        }
        return null; // Indica que la validación pasó
    }

    private String validarApellido(String apellido) {
        if (apellido.trim().isEmpty() || apellido.equals("Ingrese apellido paciente")) {
            return "El campo APELLIDO está vacío.";
        } else if (!apellido.matches("[a-zA-ZñÑáéíóúÁÉÍÓÚ\\s]+")) {
            return "El campo APELLIDO no tiene el formato correcto.";
        }
        return null; // Indica que la validación pasó
    }

    private String validarFechaNacimiento(String nacimiento) {
        if (nacimiento.trim().isEmpty() || nacimiento.equals("Ingrese nacimiento paciente")) {
            return "El campo FECHA NACIMIENTO está vacío.";
        }
        return null; // Indica que la validación pasó
    }

    private String validarEdad(String edad) {
        if (edad.trim().isEmpty() || edad.equals("Ingrese edad paciente")) {
            return "El campo EDAD está vacío.";
        } else if (!edad.matches("\\d{1,3}")) {
            return "El campo EDAD no tiene el formato correcto. Acepta hasta 3 dígitos";
        }
        return null; // Indica que la validación pasó
    }

    private String validarCUI(String cui) {
        if (cui.trim().isEmpty() || cui.equals("Ingrese cui paciente")) {
            return "El campo CUI está vacío.";
        } else if (!cui.matches("\\d{13}")) {
            return "El campo CUI no tiene el formato correcto. Deben ser 13 dígitos";
        }
        return null; // Indica que la validación pasó
    }

    private String validarResidencia(String residencia) {
        if (residencia.trim().isEmpty() || residencia.equals("Ingrese residencia paciente")) {
            return "El campo RESIDENCIA está vacío.";
        }
        return null; // Indica que la validación pasó
    }

    private String validarSF(String sf) {
        if (sf.trim().isEmpty() || sf.equals("Ingrese SF")) {
            return "El campo SF está vacío.";
        }
        return null; // Indica que la validación pasó
    }

    private void clearTextField() {
        // Limpiar y restaurar los campos de texto a sus placeholders iniciales
        restartTextField(sfTxt, "Ingrese SF");
        restartTextField(userTxt, "Ingrese nombre paciente");
        restartTextField(apellidoTxt, "Ingrese apellido paciente");
        restartTextField(fnacimientoTxt, "Ingrese nacimiento paciente");
        restartTextField(edadTxt, "Ingrese edad paciente");
        restartTextField(cuiTxt, "Ingrese cui paciente");
        restartTextField(residenciaTxt, "Ingrese residencia paciente");
        restartTextField(presionTxt, "Ingrese p/a");
        restartTextField(pulsoTxt, "Ingrese pulso paciente");
        restartTextField(temperaturaTxt, "Ingrese temperatura paciente");
        restartTextField(pesoTxt, "Ingrese peso paciente");
        restartTextField(tallaTxt, "Ingrese talla paciente");

        consultadoctoraTxt.setText("");
        diagnosticoTxt.setText("");
    }

    private void restartTextField(JTextField textField, String placeholder) {
        textField.setText(placeholder);
        textField.setForeground(new Color(204, 204, 204));
    }

    private void extractPdfData(String content) {
        // Ejemplo básico de cómo extraer información usando expresiones regulares
        sfTxt.setText(extractField(content, "SF: (.+)"));
        sfTxt.setForeground(Color.BLACK);
        userTxt.setText(extractField(content, "Nombre Paciente: (.+)"));
        userTxt.setForeground(Color.BLACK);
        apellidoTxt.setText(extractField(content, "Apellido Paciente: (.+)"));
        apellidoTxt.setForeground(Color.BLACK);
        fnacimientoTxt.setText(extractField(content, "Fecha de Nacimiento: (.+)"));
        fnacimientoTxt.setForeground(Color.BLACK);
        edadTxt.setText(extractField(content, "Edad: (.+)"));
        edadTxt.setForeground(Color.BLACK);
        cuiTxt.setText(extractField(content, "CUI: (.+)"));
        cuiTxt.setForeground(Color.BLACK);
        residenciaTxt.setText(extractField(content, "Residencia: (.+)"));
        residenciaTxt.setForeground(Color.BLACK);

        setTextFieldIfNotEmpty(presionTxt, extractField(content, "Presión: (.*)"));
        setTextFieldIfNotEmpty(pulsoTxt, extractField(content, "Pulso: (.*)"));
        setTextFieldIfNotEmpty(temperaturaTxt, extractField(content, "Temperatura: (.*)"));
        setTextFieldIfNotEmpty(pesoTxt, extractField(content, "Peso: (.*)"));
        setTextFieldIfNotEmpty(tallaTxt, extractField(content, "Talla: (.*)"));

        // Extraer diagnóstico multilinea
        diagnosticoTxt.setText(extractField(content, "Diagnóstico:\n(?s)(.*?)(?=Consulta Doctora:)"));
        // Extraer consulta doctora multilinea
        consultadoctoraTxt.setText(extractField(content, "Consulta Doctora:\n(?s)(.*)"));

    }

    private String extractField(String content, String regex) {
        Pattern pattern = Pattern.compile(regex, Pattern.MULTILINE);
        Matcher matcher = pattern.matcher(content);
        if (matcher.find()) {
            return matcher.group(1).trim();
        }
        return "";
    }

    private void setTextFieldIfNotEmpty(JTextField textField, String value) {
        if (value != null && !value.trim().isEmpty()) {
            textField.setText(value);
            textField.setForeground(Color.BLACK);
        }
    }

    private boolean isValidPdf(String filePath) {
        File pdfFile = new File(filePath);
        try (InputStream fis = new FileInputStream(pdfFile)) {

            PdfReader reader = new PdfReader(fis); // Verificar si el contenido del PDF cumple con el formato requerido
            StringBuilder pdfContent = new StringBuilder();
            for (int i = 1; i <= reader.getNumberOfPages(); i++) {
                pdfContent.append(PdfTextExtractor.getTextFromPage(reader, i));
            }
            reader.close();
            String content = pdfContent.toString();

            return content.contains("SF:")
                    && content.contains("Fecha:")
                    && content.contains("Nombre Paciente:")
                    && content.contains("Apellido Paciente:")
                    && content.contains("Fecha de Nacimiento:")
                    && content.contains("Edad:")
                    && content.contains("CUI:")
                    && content.contains("Residencia:")
                    && content.contains("PRE CONSULTA")
                    && content.contains("Presión:")
                    && content.contains("Pulso:")
                    && content.contains("Temperatura:")
                    && content.contains("Peso:")
                    && content.contains("Talla:")
                    && content.contains("Diagnóstico:")
                    && content.contains("Consulta Doctora:");
        } catch (IOException e) {
            // Si ocurre alguna excepción al cargar el documento, se considera inválido
            e.printStackTrace();
            return false;
        }
    }

    private void pdfBtnTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdfBtnTxtMouseEntered
        pdfBtn.setBackground(new Color(0, 156, 223));
    }//GEN-LAST:event_pdfBtnTxtMouseEntered

    private void pdfBtnTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdfBtnTxtMouseExited
        pdfBtn.setBackground(new Color(0, 134, 190));
    }//GEN-LAST:event_pdfBtnTxtMouseExited

    private void userTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTxtMousePressed
        addPlaceholder(userTxt, "Ingrese nombre paciente");
    }//GEN-LAST:event_userTxtMousePressed

    private void pdfBtnTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdfBtnTxtMouseClicked
        // Validar los campos de texto antes de guardar el PDF
        String nombreError = validarNombre(userTxt.getText());
        String apellidoError = validarApellido(apellidoTxt.getText());
        String nacimientoError = validarFechaNacimiento(fnacimientoTxt.getText());
        String edadError = validarEdad(edadTxt.getText());
        String cuiError = validarCUI(cuiTxt.getText());
        String residenciaError = validarResidencia(residenciaTxt.getText());
        String sfError = validarSF(sfTxt.getText());

        if (nombreError != null || apellidoError != null || nacimientoError != null || edadError != null || cuiError != null || residenciaError != null || sfError != null) {
            // Mostrar alerta si hay errores en los campos
            StringBuilder mensajeError = new StringBuilder();
            if (nombreError != null) {
                mensajeError.append(nombreError).append("\n");
            }
            if (apellidoError != null) {
                mensajeError.append(apellidoError).append("\n");
            }
            if (nacimientoError != null) {
                mensajeError.append(nacimientoError).append("\n");
            }
            if (edadError != null) {
                mensajeError.append(edadError).append("\n");
            }
            if (cuiError != null) {
                mensajeError.append(cuiError).append("\n");
            }
            if (residenciaError != null) {
                mensajeError.append(residenciaError).append("\n");
            }
            if (sfError != null) {
                mensajeError.append(sfError).append("\n");
            }

            JOptionPane.showMessageDialog(this, mensajeError.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Confirmar la acción de guardar
        int confirmResult = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea guardar el archivo PDF?", "Confirmar Guardado", JOptionPane.YES_NO_OPTION);
        if (confirmResult != JOptionPane.YES_OPTION) {
            return; // Cancelled by user
        }

        // Validar si los campos de presion, pulso, temperatura, peso y talla tienen su placeholder
        String presion = presionTxt.getText().equals("Ingrese p/a") ? "" : presionTxt.getText();
        String pulso = pulsoTxt.getText().equals("Ingrese pulso paciente") ? "" : pulsoTxt.getText();
        String temperatura = temperaturaTxt.getText().equals("Ingrese temperatura paciente") ? "" : temperaturaTxt.getText();
        String peso = pesoTxt.getText().equals("Ingrese peso paciente") ? "" : pesoTxt.getText();
        String talla = tallaTxt.getText().equals("Ingrese talla paciente") ? "" : tallaTxt.getText();

        // Generar el nombre del archivo usando la fecha, CUI y nombre del paciente si no hay archivo actual
        String savePath;
        boolean isModification;
        if (currentPdfPath != null) {
            savePath = currentPdfPath;
            isModification = true;
        } else {
            // Generar el nombre del archivo usando la fecha, CUI y nombre del paciente
            String fechaActual = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
            String proposedFileName = fechaActual + "_" + cuiTxt.getText() + "_" + userTxt.getText() + ".pdf";

            // Crea el filtro para archivos PDF
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos PDF", "pdf");

            // Crea el JFileChooser
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("GuardarPDF"); // Establece el titulo del dialogo

            // Establece el nombre de archivo propuesto
            fileChooser.setSelectedFile(new File(proposedFileName));
            fileChooser.setFileFilter(filter);

            // Muestra el dialogo para seleccionar el directorio
            int userSelection = fileChooser.showSaveDialog(this);

            if (userSelection == JFileChooser.APPROVE_OPTION) {
                // Obtiene la ruta seleccionada por el usuario
                savePath = fileChooser.getSelectedFile().getAbsolutePath();
                isModification = false;
            } else {
                return; // Cancelled save action
            }
        }

        // Llama al metodo de creacion de PDF y pasa la ruta de guardado
        Plantilla plantilla = new Plantilla(
                userTxt.getText(),
                apellidoTxt.getText(),
                fnacimientoTxt.getText(),
                edadTxt.getText(),
                cuiTxt.getText(),
                residenciaTxt.getText(),
                presion,
                pulso,
                temperatura,
                peso,
                talla,
                consultadoctoraTxt.getText(),
                diagnosticoTxt.getText(),
                sfTxt.getText(),
                new Date().toString(),
                savePath);
        plantilla.crearPlantilla(isModification);

        // Limpiar y restaurar los campos de texto a sus placeholders iniciales
        clearTextField();
        currentPdfPath = null; // Reset current path after saving
        setTitle(""); // Remove the title to indicate no file is open
    }//GEN-LAST:event_pdfBtnTxtMouseClicked

    private void apellidoTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apellidoTxtMousePressed
        addPlaceholder(apellidoTxt, "Ingrese apellido paciente");
    }//GEN-LAST:event_apellidoTxtMousePressed

    private void fnacimientoTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fnacimientoTxtMousePressed
        addPlaceholder(fnacimientoTxt, "Ingrese nacimiento paciente");
    }//GEN-LAST:event_fnacimientoTxtMousePressed

    private void edadTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edadTxtMousePressed
        addPlaceholder(edadTxt, "Ingrese edad paciente");
    }//GEN-LAST:event_edadTxtMousePressed

    private void cuiTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cuiTxtMousePressed
        addPlaceholder(cuiTxt, "Ingrese cui paciente");
    }//GEN-LAST:event_cuiTxtMousePressed

    private void residenciaTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_residenciaTxtMousePressed
        addPlaceholder(residenciaTxt, "Ingrese residencia paciente");
    }//GEN-LAST:event_residenciaTxtMousePressed

    private void presionTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_presionTxtMousePressed
        addPlaceholder(presionTxt, "Ingrese p/a");
    }//GEN-LAST:event_presionTxtMousePressed

    private void pulsoTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pulsoTxtMousePressed
        addPlaceholder(pulsoTxt, "Ingrese pulso paciente");
    }//GEN-LAST:event_pulsoTxtMousePressed

    private void temperaturaTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_temperaturaTxtMousePressed
        // TODO add your handling code here:
        addPlaceholder(temperaturaTxt, "Ingrese temperatura paciente");
    }//GEN-LAST:event_temperaturaTxtMousePressed

    private void pesoTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesoTxtMousePressed
        // TODO add your handling code here:
        addPlaceholder(pesoTxt, "Ingrese peso paciente");
    }//GEN-LAST:event_pesoTxtMousePressed

    private void tallaTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tallaTxtMousePressed
        // TODO add your handling code here:
        addPlaceholder(tallaTxt, "Ingrese talla paciente");
    }//GEN-LAST:event_tallaTxtMousePressed

    private void sfTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sfTxtMousePressed
        // TODO add your handling code here:
        addPlaceholder(sfTxt, "Ingrese SF");
    }//GEN-LAST:event_sfTxtMousePressed

    private void openPdfBtnTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openPdfBtnTxtMouseClicked
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos PDF", "pdf");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile().getAbsoluteFile();
            currentPdfPath = selectedFile.getAbsolutePath();

            // Verificar si el PDF tiene el contenido adecuado
            if (isValidPdf(currentPdfPath)) {
                // Actualizar el titulo del JFrame
                setTitle("Archivo abierto: " + currentPdfPath);

                File f = new File(currentPdfPath);
                try (InputStream is = new FileInputStream(f)) {
                    PdfReader reader = new PdfReader(is);
                    StringBuilder pdfContent = new StringBuilder();
                    for (int i = 1; i <= reader.getNumberOfPages(); i++) {
                        pdfContent.append(PdfTextExtractor.getTextFromPage(reader, i));
                    }
                    reader.close();

                    // Extraer la información del contenido del PDF
                    extractPdfData(pdfContent.toString());

                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(this, "El archivo PDF seleccionado no tiene el contenido adecuado para ser leído.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_openPdfBtnTxtMouseClicked

    private void openPdfBtnTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openPdfBtnTxtMouseEntered
        // TODO add your handling code here:
        openPdfBtn.setBackground(new Color(0, 156, 223));
    }//GEN-LAST:event_openPdfBtnTxtMouseEntered

    private void openPdfBtnTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_openPdfBtnTxtMouseExited
        // TODO add your handling code here:
        openPdfBtn.setBackground(new Color(0, 134, 190));
    }//GEN-LAST:event_openPdfBtnTxtMouseExited

    private void clearBtnTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearBtnTxtMouseClicked
        // TODO add your handling code here:
        // Mostrar un cuadro de diálogo de confirmación
        int confirmResult = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea borrar todos los campos? Se perderá toda la información ingresada.", "Confirmar Borrado", JOptionPane.YES_NO_OPTION);
        if (confirmResult == JOptionPane.YES_OPTION) {
            // Limpiar y restaurar los campos de texto a sus placeholders iniciales
            clearTextField();
            currentPdfPath = null; // Reset current path after saving
            setTitle(""); // Remove the title to indicate no file is open
        }
    }//GEN-LAST:event_clearBtnTxtMouseClicked

    private void clearBtnTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearBtnTxtMouseEntered
        // TODO add your handling code here:
        clearBtn.setBackground(new Color(175, 186, 0));
    }//GEN-LAST:event_clearBtnTxtMouseEntered

    private void clearBtnTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearBtnTxtMouseExited
        // TODO add your handling code here:
        clearBtn.setBackground(new Color(153, 153, 0));
    }//GEN-LAST:event_clearBtnTxtMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel apellidoLabel;
    private javax.swing.JTextField apellidoTxt;
    private javax.swing.JPanel clearBtn;
    private javax.swing.JLabel clearBtnTxt;
    private javax.swing.JLabel consultaLabel;
    private javax.swing.JTextArea consultadoctoraTxt;
    private javax.swing.JLabel cuiLabel;
    private javax.swing.JTextField cuiTxt;
    private javax.swing.JLabel diagnosticoLabel;
    private javax.swing.JTextArea diagnosticoTxt;
    private javax.swing.JLabel edadLabel;
    private javax.swing.JTextField edadTxt;
    private javax.swing.JLabel fnacimientoLabel;
    private javax.swing.JTextField fnacimientoTxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel logo;
    private javax.swing.JPanel openPdfBtn;
    private javax.swing.JLabel openPdfBtnTxt;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel pdfBtn;
    private javax.swing.JLabel pdfBtnTxt;
    private javax.swing.JLabel pesoLabel;
    private javax.swing.JTextField pesoTxt;
    private javax.swing.JLabel preconsulta;
    private javax.swing.JLabel presionLabel;
    private javax.swing.JTextField presionTxt;
    private javax.swing.JLabel pulsoLabel;
    private javax.swing.JTextField pulsoTxt;
    private javax.swing.JLabel residenciaLabel;
    private javax.swing.JTextField residenciaTxt;
    private javax.swing.JLabel saludbg;
    private javax.swing.JLabel sfLabel;
    private javax.swing.JTextField sfTxt;
    private javax.swing.JLabel tallaLabel;
    private javax.swing.JTextField tallaTxt;
    private javax.swing.JLabel temperaturaLabel;
    private javax.swing.JTextField temperaturaTxt;
    private javax.swing.JLabel tittle;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField userTxt;
    // End of variables declaration//GEN-END:variables
}
